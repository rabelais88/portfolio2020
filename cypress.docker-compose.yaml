version: "3.7"
services:
  e2e-chrome:
    image: cypress/included:4.1.0
    command: "--browser chrome"
    volumes:
      - ./cypress:/cypress
      - ./cypress.json:/cypress.json
    environment:
      # must start with http:// or https://
      - CYPRESS_baseUrl=http://front-www:3000
    networks:
      - backend
# below is copied from local.noproxy.docker-compose.yaml
  backend:
    # image: portfolio2020-api:latest
    # restart: always
    # deploy:
    #   restart_policy:
    #     condition: on-failure
    build:
      dockerfile: local.fast.dockerfile
      context: ./api
    environment:
      - ENV=development
      - PORT=4500
      # equivalent to postgres://db:5432
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=admin
      - DB_PASSWORD=1234
      - DB_NAME=portfolio
      - URL=http://localhost:4500
      # must include /login
      - REDIRECT_URL=http://localhost:5000/login
      # CORS setting
      - ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5000
      - JAEGER=true
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
      # check api/env/env.go for more info
      - SECRET_PATH=/run/secrets
      - DB_PASSWORD_FILE=portfolio-db-password
      - SECRET_JWT_FILE=portfolio-secret-jwt
      - GOOGLE_ID_FILE=portfolio-google-client-id
      - GOOGLE_SECRET_FILE=portfolio-google-client-secret
      - ADMIN_GMAIL_ACCOUNT_FILE=portfolio-admin-gmail-account
    ports:
      - 4500:4500
    networks:
      - backend
    secrets:
      - portfolio-admin-gmail-account
      - portfolio-google-client-id
      - portfolio-google-client-secret
      - portfolio-secret-jwt
      - portfolio-db-password

  db:
    image: postgres:13
    restart: always
    # deploy:
    #   restart_policy:
    #     condition: on-failure
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=1234
      - POSTGRES_DB=portfolio
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data

  jaeger:
    image: jaegertracing/all-in-one:1.18
    restart: always
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    ports:
     # - 5775:5775/udp # legacy client
     - 6831:6831/udp # accept jaeger.thrift over compact thrift protocol
     - 6832:6832/udp # accept jaeger.thrift over binary thrift protocol
     - 5778:5778 # serve configs
     - 16686:16686 # serve frontend(UI)
     - 14268:14268 # accept jaeger.thrift directly from clients
     - 14250:14250 # accept model.proto
     # - 9411:9411 # Zipkin compatible endpoint (optional)
    networks:
      - backend

  front-www:
    # image: portfolio2020-front-www:latest
    # restart: always
    build:
      dockerfile: local.dockerfile
      context: ./front-www
    environment:
      - PORT=3000
      # API_URL is provided via dockerfile
      # -> environment variable is precompiled
    ports:
      - 3000:3000
    networks:
      - backend

  # https://hub.docker.com/_/nginx
  front-admin:
    build:
      dockerfile: local.dockerfile
      context: ./front-admin
      # API_URL is provided via ./front-admin/.env.development
      # -> environment variable is precompiled
    environment:
      - NGINX_PORT=5000
      - NGINX_HOST=localhost
    volumes:
      - ./front-admin/nginx/default.conf:/etc/nginx/templates/default.conf.template
    ports:
      - 5000:5000
      # listen to 80 and out to 5000
      # - 5000:80

networks:
  backend:
    driver: overlay
volumes:
  db-data:
secrets:
  portfolio-admin-gmail-account:
    # use external: true for production
    file: ./secret/admin-gmail-account.secret
  portfolio-google-client-id:
    file: ./secret/google-client-id.secret
  portfolio-google-client-secret:
    file: ./secret/google-client-secret.secret
  portfolio-secret-jwt:
    file: ./secret/secret-jwt.secret
  portfolio-db-password:
    file: ./secret/db-password.secret